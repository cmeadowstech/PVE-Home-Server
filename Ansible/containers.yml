---
- name: Setup containers
  hosts: containers
  module_defaults:
    group/community.docker.docker:
      timeout: 120
  vars:
    user: root
  roles:
    - update
    - fstab
    - tailscale

  tasks:
    - name: Download docker GPG key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/debian/gpg
        dest: /usr/share/keyrings/docker-keyring.asc
        mode: '0644'

    - name: Add docker repository
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/usr/share/keyrings/docker-keyring.asc] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable"
        state: present

    - name: Install apt dependencies
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: 86400 # One day
        pkg:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin

    - name: Create app folders
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      with_items:
      - /src/npm/data
      - /src/npm/letsencrypt
      - /src/actual
      - /src/glance
      - /src/arr

    - name: Copy docker files
      ansible.builtin.copy:
        src: "{{ item }}_docker-compose.yml"
        dest: "/src/{{ item }}/docker-compose.yml"
      with_items:
        - npm
        - arr

    - name: Create and start apps from docker-compose
      community.docker.docker_compose_v2:
        project_src: "/src/{{ item }}"
      register: output
      with_items:
        - npm
        - arr

    - name: Create flaresolverr container
      community.docker.docker_container:
        name: flaresolverr
        image: ghcr.io/flaresolverr/flaresolverr:latest
        published_ports: 8191:8191
        restart_policy: "unless-stopped"

    - name: Copy glance files
      ansible.builtin.copy:
        src: "glance.yml"
        dest: "/src/glance/glance.yml"
      notify: Restart glance

    - name: Create Glance container
      community.docker.docker_container:
        name: glance
        image: glanceapp/glance
        published_ports: 8080:8080
        restart_policy: "unless-stopped"
        volumes:
          - /src/glance/glance.yml:/app/glance.yml
          - /etc/timezone:/etc/timezone:ro
          - /etc/localtime:/etc/localtime:ro
    
    - name: Create it-tools container
      community.docker.docker_container:
        name: it-tools
        image: corentinth/it-tools:latest
        published_ports: 8081:80
        restart_policy: "unless-stopped"

    - name: Create Watchtower container
      community.docker.docker_container:
        name: watchtower
        image: containrrr/watchtower
        restart_policy: "unless-stopped"
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
        env:
          WATCHTOWER_CLEANUP: "true"

    - name: Run Dozzle container
      community.docker.docker_container:
        name: dozzle
        image: amir20/dozzle:latest
        state: started
        restart_policy: always
        published_ports:
          - "8082:8080"
        volumes:
          - "/var/run/docker.sock:/var/run/docker.sock"

  post_tasks:
    - name: Run roles at the end
      ansible.builtin.include_role:
        name: "{{ item }}"
      with_items:
        - hoarder
        - arr
        - paperless
        - changedetection
        - rsshub
        - magicmirror

  handlers:
    - name: Restart glance
      community.docker.docker_container:
        name: glance
        restart: true
    