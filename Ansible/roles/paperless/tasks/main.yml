---
- name: Create user
  ansible.builtin.group:
    name: "{{ app_name }}"
    gid: 1111
    state: present

- name: Create group
  ansible.builtin.user:
    name: "{{ app_name }}"
    uid: 1111
    password: "{{ password | password_hash('sha512') }}"

- name: Configure postgres database
  block:
    - name: Create PostgreSQL user
      delegate_to: localhost
      community.postgresql.postgresql_user:
        name: "{{ app_name }}"
        password: "{{ password }}"
        login_host: db.home
        login_user: cmeadows
        login_password: "{{ password }}"
        db: postgres

    - name: Create PostgreSQL databases
      delegate_to: localhost
      community.postgresql.postgresql_db:
        name: paperless
        state: present
        owner: "{{ app_name }}"
        encoding: UTF-8
        template: template0
        login_host: db.home
        login_user: cmeadows
        login_password: "{{ password }}"

- name: Configure paperless
  notify: Restart {{ app_name }}
  block:
    - name: Create app folder
      ansible.builtin.file:
        path: /src/{{ app_name }}
        mode: '0750'
        state: directory

    - name: Create config folder
      ansible.builtin.file:
        path: "/mnt/config/{{ app_name }}"
        state: directory
        mode: '0750'
        owner: "{{ app_name }}"
        group: "{{ app_name }}"

    - name: Copy .env file
      ansible.builtin.copy:
        src: ".env"
        dest: "/src/{{ app_name }}/.env"

    - name: Copy docker files
      ansible.builtin.template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
      with_items:
        - src: "docker-compose.yml.j2"
          dest: "/src/{{ app_name }}/docker-compose.yml"
        - src: "docker-compose.env.j2"
          dest: "/src/{{ app_name }}/docker-compose.env"

    - name: Create and start paperless
      community.docker.docker_compose_v2:
        project_src: /src/{{ app_name }}

- name: Configure DNS and proxies
  ansible.builtin.include_role:
    name: proxy
